services:
  mc:
    image: itzg/minecraft-server:java21-graalvm@sha256:a3e9bf31bc011eac96fea66ad910c97dbfa49982bb14235a96d108941c69a63b
    restart: always
    container_name: paper

    environment:
      # main
      EULA: "true"
      # PAPER_CHANNEL: "experimental" # PaperMC 上で experimental build 扱いのバージョンで遊ぶときは必要な設定
      VERSION: "1.21.4"
      TYPE: PAPER
      VIEW_DISTANCE: 10
      MEMORY: 12G
      VIRTUAL_HOST: genkai.dev
      VIRTUAL_PORT: 8123
      LETSENCRYPT_HOST: genkai.dev
      LETSENCRYPT_EMAIL: zztkm@tsurutatakumi.info
      # server config
      ENABLE_RCON: "true"
      DIFFICULTY: "hard"
      MOTD: "Genkai Pistachio Gaming Server"
      OPS_FILE: /extra/ops.json
      # WHITELIST_FILE: /extra/whitelist.json
      # EXISTING_WHITELIST_FILE: SYNCHRONIZE

      # plugins
      SYNC_SKIP_NEWER_IN_DESTINATION: false

      # SPIGET_RESOURCES 1.21 対応できていないプラグイン
      # 100374 (Hidden Armor)
      SPIGET_RESOURCES: 1007,1997,28140,69551

      # Modrinth
      # plugin はこちらで検索: https://modrinth.com/plugins
      # NOTE: https://docker-minecraft-server.readthedocs.io/en/latest/mods-and-plugins/modrinth/ 
      MODRINTH_PROJECTS: dynmap:3.7-beta-8,worldedit:HIoAq6RI,worldguard:7.0.13-beta-2

      PLUGINS: |
        https://download.geysermc.org/v2/projects/geyser/versions/latest/builds/latest/downloads/spigot
        https://download.geysermc.org/v2/projects/floodgate/versions/latest/builds/latest/downloads/spigot

      # rcon cmd
      RCON_CMDS_STARTUP: |-
        gamerule playersSleepingPercentage 50
    stdin_open: true
    ports:
      # - 9100:9100
      - 25565:25565
      # - 25575:25575
      - 19132:19132/udp
      - 8123:8123
    volumes:
      - ./data:/data
      - ./plugins:/plugins
      - ./extra:/extra

  backups:
    image: itzg/mc-backup
    environment:
      BACKUP_INTERVAL: "1d"
      PRUNE_BACKUPS_DAYS: 2
      # instead of network_mode below, could declare RCON_HOST
      # RCON_HOST: mc
    volumes:
      # mount the same volume used by server, but read-only
      - ./data:/data:ro
      # use a host attached directory so that it in turn can be backed up
      # to external/cloud storage
      - ./backup:/backups
      # share network namespace with server to simplify rcon access
    network_mode: "service:mc"
    depends_on:
      - mc

  nginx-proxy:
    image: nginxproxy/nginx-proxy:1.7
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:2.5
    container_name: nginx-proxy-lets-encrypt
    restart: always
    depends_on:
      - nginx-proxy
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
        #  agent:
        #    image: grafana/agent:latest
        #    restart: always
        #    container_name: agent
        #    security_opt:
        #      - no-new-privileges:true
        #    volumes:
        #      - ./agent.yml:/etc/agent-config/agent.yml
        #    entrypoint:
        #      - /bin/grafana-agent
        #      - -config.file=/etc/agent-config/agent.yml
        #      - -metrics.wal-directory=/tmp/agent/wal
        #    depends_on:
        #      - mc

volumes:
  conf:
  vhost:
  html:
  dhparam:
  certs:
